# Defines Docker image suitable for testing cookbooks on CentOS 7.
#
# This handles a number of idiosyncrasies with systemd so it can be
# run as the root process of the container, making it behave like a
# normal VM but without the overhead.
FROM centos

# Set the user var
ENV user kitchen

# Set chef version
ENV CHEF_VERSION 12.7.2-1.el7

# Systemd needs to be able to access cgroups (why? .. because)
VOLUME /sys/fs/cgroup

# Remove the rubbish systemd-container, install pure systemd and remove unrequired unit files
RUN yum clean all; \
    yum -y -q swap -- remove systemd-container systemd-container-libs -- install systemd systemd-libs; \
    (cd /lib/systemd/system/sysinit.target.wants/; \
    for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \
    rm -f /lib/systemd/system/multi-user.target.wants/*; \
    rm -f /etc/systemd/system/*.wants/*; \
    rm -f /lib/systemd/system/local-fs.target.wants/*; \
    rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
    rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
    rm -f /lib/systemd/system/basic.target.wants/*; \
    rm -f /lib/systemd/system/anaconda.target.wants/*;

# Add the docker public key to the auth keys for the user
ADD .kitchen/docker_id_rsa.pub /tmp/docker.pub


# Set up the user with passwordless sudo and direct ssh
RUN useradd -d /home/${user} -m -s /bin/bash kitchen; \
    (echo ${user}:${user} | chpasswd); \
    mkdir -p /etc/sudoers.d; \
    echo "${user} ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/${user}; \
    echo Defaults!ALL !requiretty >> /etc/sudoers.d/${user}; \
    chmod 0440 /etc/sudoers.d/${user}; \
    [ ! -d /home/kitchen/.ssh ] && mkdir /home/${user}/.ssh; \
    chown -R ${user} /home/${user}/.ssh; \
    chmod 0700 /home/${user}/.ssh; \
    cat /tmp/docker.pub >> /home/${user}/.ssh/authorized_keys; \
    chown ${user} /home/${user}/.ssh/authorized_keys; \
    chmod 0600 /home/${user}/.ssh/authorized_keys; \
    rm -f /tmp/docker.pub;

# Setup SSH daemon so test-kitchen can access the container
RUN yum -y -q install openssh-server openssh-clients; \
    ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key -N ''; \
    ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key -N ''; \
    echo 'OPTIONS="-o UseDNS=no -o UsePAM=no -o PasswordAuthentication=yes -o UsePrivilegeSeparation=no"' >> /etc/sysconfig/sshd; \
    systemctl enable sshd.service;

# Install missing standard packages and cleanup repos
RUN yum -y -q install crontabs curl initscripts man man-pages net-tools passwd sudo tar telnet vim which iptables-services systemd-sysv openssl-devel openssl-libs openssl wget firewalld links; \
    yum clean all; \
    rm -f /etc/yum.repos.d/CentOS*; \
    rm -f /etc/yum.repos.d/systemd.repo;

RUN sed -i '\#<include if_selinux_enabled="yes" selinux_root_relative="yes">contexts/dbus_contexts</include>#d' /etc/dbus-1/system.conf
RUN sed -i '\#<include if_selinux_enabled="yes" selinux_root_relative="yes">contexts/dbus_contexts</include>#d' /etc/dbus-1/session.conf

RUN curl -L https://www.opscode.com/chef/install.sh | bash
